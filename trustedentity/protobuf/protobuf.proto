// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

option java_multiple_files = true;
option java_package = "io.grpc.examples.trustedentity";
option java_outer_classname = "SecretKeeperProto";

package trustedentity;

// The secrets' service definition.
service SecretKeeper {
  // Sends a request for a secret
  rpc SaySecret (SecretRequest) returns (SecretReply) {}
  // Sends a request for a CACertificate
  rpc SayCACertificate (CACertificateRequest) returns (CACertificateReply) {}
  // Sends a request for a CACertificate
  rpc SayCurrentCRL (CurrentCRLRequest) returns (CurrentCRLReply) {}
}

// The request message containing the secret name.
message SecretRequest {
  string name = 1;
}

// The response message containing the secret
message SecretReply {
  string message = 1;
}

// The request message for the CACertificate.
message CACertificateRequest {
//  string name = 1;
}

// The response message containing the CACertificate
message CACertificateReply {
  string message = 1;
}

// The request message for the CRL request.
message CurrentCRLRequest {
    //  string name = 1;
}

// The response message containing the CRL response
message CurrentCRLReply {
    string message = 1;
}
